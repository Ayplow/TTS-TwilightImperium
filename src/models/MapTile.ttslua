-- MapTile.ttslua
-- Firoso 2019
-- Written for use by the Twilight Imperium Tabletop Simulator Community
-- https://github.com/TwilightImperiumContentCreators/TTS-TwilightImperium

-- This file contains the class MapTile used to represent the data for the Map
-- tiles used in Twilight Imperium, as well as supporting methods for working
-- with those tiles.

-- base prototype
MapInfo =
{
  -- the numeric Id of the tile as shown center-left of the tile art.
  id,

  -- a string containing the TTS object guid of the tile associated with this MapInfo
  guid,

  -- a string containing the user friendly display name of the tile like 1 - Jord
  -- NOTE: This can probably be derived by convention
  title,

  -- a table containing a list of plants on this tile.
  planets
}

-- creates a new instance derived from MapInfo with the specified base object and parameters
function MapTile:new(o, id, guid, title, planets)
  o = o or {}
  setmetatable(o, self)
  self.__index = self
  self.id = id or -1
  self.guid = guid or 'undefined'
  self.title = title or 'undefined'
  self.planets = planets or {}
  return o
end

function MapTile:new(o)
  o = o or MapTile:new({}, nil, nil, nil, nil)
  setmetatable(o, self)
  self.__index = self
  return o
end

function MapTile:getTile()
  return getObjectFromGUID(self.guid)
end

function MapTile:containsPlanet(planetName)
  for _,v in pairs(self.planets) do
    if string.upper(v) == string.upper(planetName) then
      return true
    end
  end
  return false
end
